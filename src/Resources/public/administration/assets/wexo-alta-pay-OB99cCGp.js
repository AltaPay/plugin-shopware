const o=`{% block sw_order_detail_content_tabs_extension %} <sw-tabs-item v-if="!isOrderEditing && altaPayTransactionId" class="sw-order-detail__tabs-tab-altaPay" :route="{ name: 'sw.order.detail.altaPay', params: { id: $route.params.id } }" :title="$tc('altaPay.tabDetails')" > {{ $tc('altaPay.tabDetails') }} </sw-tabs-item> {% endblock %}`;Shopware.Component.override("sw-order-detail",{template:o,computed:{altaPayTransactionId(){var e,t;return(t=(e=this.order)==null?void 0:e.customFields)==null?void 0:t.wexoAltaPayTransactionId}}});const d=`<sw-card title="AltaPay Status" :isLoading="isLoading" positionIdentifier="altapay"> <sw-card-section v-if="transaction"> <sw-container columns="1fr 1fr" gap="10px"> <div>Transaction ID:</div> <div>{{ transaction.TransactionId }}</div> <div>Payment ID:</div> <div>{{ transaction.PaymentId }}</div> <div>Transaction Status:</div> <div>{{ transaction.TransactionStatus }}</div> <div>Reserved Amount:</div> <div>{{ transaction.ReservedAmount }} {{ transaction.MerchantCurrencyAlpha }}</div> <div>Captured Amount:</div> <div>{{ transaction.CapturedAmount }} {{ transaction.MerchantCurrencyAlpha }}</div> <div>Refunded Amount:</div> <div>{{ transaction.RefundedAmount }} {{ transaction.MerchantCurrencyAlpha }}</div> <div>3D Secure:</div> <div>{{ transaction.ThreeDSecureResult }}</div> <div>Created:</div> <div>{{ transaction.CreatedDate }}</div> <div>Last updated:</div> <div>{{ transaction.UpdatedDate }}</div> </sw-container> </sw-card-section> <sw-card-section v-if="transaction"> <sw-container columns="1fr 1fr 1fr" gap="10px" align="center"> <div style="display: flex;justify-content: center;gap: 25px;"> <sw-button :disabled="isLoading || transaction.ReservedAmount === transaction.CapturedAmount" @click="openCaptureModal">{{ $tc("altaPay.capture") }}</sw-button> <sw-button :disabled="isLoading || transaction.RefundedAmount === transaction.CapturedAmount" @click="openRefundModal">{{ $tc("altaPay.refund") }}</sw-button> <sw-button :disabled="isLoading || !['open', 'in_progress', 'authorized'].includes(transactionSource.transactions[0].stateMachineState.technicalName)" @click="cancel">{{ $tc("altaPay.cancel") }}</sw-button> <sw-modal v-if="showCaptureModal" @modal-close="closeCaptureModal" :title="$tc('altaPay.capture')" variant="small"> <div> <div>Amount:</div> <sw-number-field type="captureAmount" numberType="float" :allowEmpty="false" v-model:value="captureAmount" placeholder="Amount"> </sw-number-field> <p v-if="successMessage" class="sw-field__success" style="color: #29de3b;"> {{ successMessage }} </p> <p v-if="errorMessage" class="sw-field__error" style="color: #de294c;"> {{ errorMessage }} </p> </div> <template #modal-footer> <sw-button @click="closeCaptureModal" size="small"> {{ $tc('global.default.cancel') }} </sw-button> <sw-button :disabled="isLoadingCapture" @click="capture" variant="primary" size="small" :isLoading="isLoadingCapture"> {{ $tc("altaPay.capture") }} </sw-button> </template> </sw-modal> <sw-modal v-if="showRefundModal" @modal-close="closeRefundModal" :title="$tc('altaPay.refund')" variant="small"> <div> <div>Amount:</div> <sw-number-field type="refundAmount" numberType="float" :allowEmpty="false" v-model:value="refundAmount" placeholder="Amount"> </sw-number-field> <p v-if="successMessage" class="sw-field__success" style="color: #29de3b;"> {{ successMessage }} </p> <p v-if="errorMessage" class="sw-field__error" style="color: #de294c;"> {{ errorMessage }} </p> </div> <template #modal-footer> <sw-button @click="closeRefundModal" size="small"> {{ $tc('global.default.cancel') }} </sw-button> <sw-button :disabled="isLoadingRefund" @click="refund" variant="primary" size="small" :isLoading="isLoadingRefund"> {{ $tc("altaPay.refund") }} </sw-button> </template> </sw-modal> </div> </sw-container> </sw-card-section> </sw-card>`,{mapGetters:u,mapState:l}=Shopware.Component.getComponentHelper(),{State:r}=Shopware;Shopware.Component.register("sw-order-detail-altapay",{template:d,inject:["altaPayService"],computed:{...l("swOrderDetail",["order"]),orderDetails(){var e,t,a;try{if(!(((a=(t=(e=Shopware==null?void 0:Shopware.Context)==null?void 0:e.app)==null?void 0:t.config)==null?void 0:a.version)??"").startsWith("6.6"))return Shopware.Store.get("swOrderDetail").order}catch(s){console.log("swOrderDetail store not found:",s)}},orderId(){var e,t;return((e=this.orderDetails)==null?void 0:e.id)||((t=this.order)==null?void 0:t.id)||null},transactionSource(){return this.orderDetails||this.order||null}},metaInfo(){return{title:"AltaPay"}},data(){return{transaction:null,captureAmount:0,refundAmount:0,isLoadingCapture:!1,isLoadingRefund:!1,showCaptureModal:!1,showRefundModal:!1,errorMessage:"",successMessage:""}},methods:{createdComponent(){r.commit("swOrderDetail/setLoading",["order",!0]),this.altaPayService.getPayments(this.orderId).then(e=>{this.transaction=e.Body.Transactions.Transaction}).finally(()=>{r.commit("swOrderDetail/setLoading",["order",!1])})},capture(){this.isLoadingCapture=!0,r.commit("swOrderDetail/setLoading",["order",!0]),this.altaPayService.capture(this.orderId,this.captureAmount).then(e=>{if(e.Body.Result==="Error"){this.errorMessage=e.Body.MerchantErrorMessage;return}else this.successMessage="Captured successfully.";this.transaction=e.Body.Transactions.Transaction,this.$emit("save-edits")}).finally(()=>{setTimeout(()=>{this.isLoadingCapture=!1,this.closeCaptureModal(),r.commit("swOrderDetail/setLoading",["order",!1])},2e3)})},refund(){this.isLoadingRefund=!0,r.commit("swOrderDetail/setLoading",["order",!0]),this.altaPayService.refund(this.orderId,this.refundAmount).then(e=>{if(e.Body.Result==="Error"){this.errorMessage=e.Body.MerchantErrorMessage;return}else this.successMessage="Refunded successfully.";this.transaction=e.Body.Transactions.Transaction,this.$emit("save-edits")}).finally(()=>{setTimeout(()=>{this.isLoadingRefund=!1,this.closeRefundModal(),r.commit("swOrderDetail/setLoading",["order",!1])},2e3)})},cancel(){r.commit("swOrderDetail/setLoading",["order",!0]),this.altaPayService.cancel(this.orderId).then(e=>{this.transaction=e.Body.Transactions.Transaction,this.$emit("save-edits")}).finally(()=>{r.commit("swOrderDetail/setLoading",["order",!1])})},openCaptureModal(){this.captureAmount=this.transaction.ReservedAmount-this.transaction.CapturedAmount,this.showCaptureModal=!0},closeCaptureModal(){this.showCaptureModal=!1,this.errorMessage="",this.successMessage=""},openRefundModal(){this.refundAmount=this.transaction.CapturedAmount-this.transaction.RefundedAmount,this.showRefundModal=!0},closeRefundModal(){this.showRefundModal=!1,this.errorMessage="",this.successMessage=""}},created(){this.createdComponent()}});const i=Shopware.Classes.ApiService,{Application:n}=Shopware;class c extends i{getPayments(t){return this.httpClient.get(`/${this.getApiBasePath()}/payments?orderId=${t}`,{headers:this.getBasicHeaders()}).then(a=>i.handleResponse(a))}capture(t,a){return this.httpClient.post(`/${this.getApiBasePath()}/capture`,{orderId:t,captureAmount:a},{headers:this.getBasicHeaders()}).then(s=>i.handleResponse(s))}refund(t,a){return this.httpClient.post(`/${this.getApiBasePath()}/refund`,{orderId:t,refundAmount:a},{headers:this.getBasicHeaders()}).then(s=>i.handleResponse(s))}cancel(t){return this.httpClient.post(`/${this.getApiBasePath()}/cancel`,{orderId:t},{headers:this.getBasicHeaders()}).then(a=>i.handleResponse(a))}}n.addServiceProvider("altaPayService",e=>{const t=n.getContainer("init");return new c(t.httpClient,e.loginService,"altapay")});Shopware.Module.register("wexo-altapay",{routeMiddleware(e,t){const a="sw.order.detail.altaPay";t.name==="sw.order.detail"&&t.children.every(s=>s.name!==a)&&t.children.push({name:a,path:"/sw/order/detail/:id/altapay",component:"sw-order-detail-altapay",meta:{parentPath:"sw.order.index"}}),e(t)}});Shopware.Locale.extend("da-DK",{altaPay:{tabDetails:"AltaPay",capture:"Hæv",refund:"Refunder",cancel:"Annuller"}});Shopware.Locale.extend("en-GB",{altaPay:{tabDetails:"AltaPay",capture:"Capture",refund:"Refund",cancel:"Cancel"}});Shopware.Locale.extend("de-DE",{altaPay:{tabDetails:"AltaPay",capture:"Einfangen",refund:"Rückerstattung",cancel:"Annullieren"}});
//# sourceMappingURL=wexo-alta-pay-OB99cCGp.js.map
