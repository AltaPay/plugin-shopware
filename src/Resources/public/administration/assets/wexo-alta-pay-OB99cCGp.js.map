{"version":3,"file":"wexo-alta-pay-OB99cCGp.js","sources":["../../../app/administration/src/page/sw-order-detail/sw-order-detail.html.twig","../../../app/administration/src/page/sw-order-detail/index.js","../../../app/administration/src/view/sw-order-detail-altapay/sw-order-detail-altapay.html.twig","../../../app/administration/src/view/sw-order-detail-altapay/index.js","../../../app/administration/src/services/altaPay.service.js","../../../app/administration/src/main.js"],"sourcesContent":["{% block sw_order_detail_content_tabs_extension %}\n    <sw-tabs-item\n            v-if=\"!isOrderEditing && altaPayTransactionId\"\n            class=\"sw-order-detail__tabs-tab-altaPay\"\n            :route=\"{ name: 'sw.order.detail.altaPay', params: { id: $route.params.id } }\"\n            :title=\"$tc('altaPay.tabDetails')\"\n    >\n            {{ $tc('altaPay.tabDetails') }}\n    </sw-tabs-item>\n{% endblock %}\n","import template from './sw-order-detail.html.twig';\n\nShopware.Component.override('sw-order-detail', {\n    template,\n\n    computed: {\n        altaPayTransactionId() {\n            return this.order?.customFields?.wexoAltaPayTransactionId;\n        }\n    }\n})\n","<sw-card title=\"AltaPay Status\" :isLoading=\"isLoading\" positionIdentifier=\"altapay\">\n    <sw-card-section v-if=\"transaction\">\n        <sw-container columns=\"1fr 1fr\" gap=\"10px\">\n            <div>Transaction ID:</div>\n            <div>{{ transaction.TransactionId }}</div>\n            <div>Payment ID:</div>\n            <div>{{ transaction.PaymentId }}</div>\n            <div>Transaction Status:</div>\n            <div>{{ transaction.TransactionStatus }}</div>\n            <div>Reserved Amount:</div>\n            <div>{{ transaction.ReservedAmount }} {{ transaction.MerchantCurrencyAlpha }}</div>\n            <div>Captured Amount:</div>\n            <div>{{ transaction.CapturedAmount }} {{ transaction.MerchantCurrencyAlpha }}</div>\n            <div>Refunded Amount:</div>\n            <div>{{ transaction.RefundedAmount }} {{ transaction.MerchantCurrencyAlpha }}</div>\n            <div>3D Secure:</div>\n            <div>{{ transaction.ThreeDSecureResult }}</div>\n            <div>Created:</div>\n            <div>{{ transaction.CreatedDate }}</div>\n            <div>Last updated:</div>\n            <div>{{ transaction.UpdatedDate }}</div>\n        </sw-container>\n    </sw-card-section>\n    <sw-card-section v-if=\"transaction\">\n            <sw-container columns=\"1fr 1fr 1fr\" gap=\"10px\" align=\"center\">\n                <div style=\"display: flex;justify-content: center;gap: 25px;\">\n                    <sw-button :disabled=\"isLoading || transaction.ReservedAmount === transaction.CapturedAmount\" @click=\"openCaptureModal\">{{ $tc(\"altaPay.capture\") }}</sw-button>\n                    <sw-button :disabled=\"isLoading || transactionSource.transactions[0].stateMachineState.technicalName !== 'paid'\" @click=\"refund\">{{ $tc(\"altaPay.refund\") }}</sw-button>\n                    <sw-button :disabled=\"isLoading || !['open', 'in_progress', 'authorized'].includes(transactionSource.transactions[0].stateMachineState.technicalName)\" @click=\"cancel\">{{ $tc(\"altaPay.cancel\") }}</sw-button>\n                    <sw-modal v-if=\"showCaptureModal\" @modal-close=\"closeCaptureModal\" :title=\"$tc('altaPay.capture')\"\n                              variant=\"small\">\n                        <div>\n                            <div>Amount:</div>\n                            <sw-number-field type=\"captureAmount\"\n                                             numberType=\"float\"\n                                             :allowEmpty=\"false\"\n                                             v-model:value=\"captureAmount\"\n                                             placeholder=\"Amount\">\n                            </sw-number-field>\n                            <p v-if=\"successMessage\" class=\"sw-field__success\" style=\"color: #29de3b;\">\n                                {{ successMessage }}\n                            </p>\n                            <p v-if=\"errorMessage\" class=\"sw-field__error\" style=\"color: #de294c;\">\n                                {{ errorMessage }}\n                            </p>\n                        </div>\n                        <template #modal-footer>\n                            <sw-button @click=\"closeCaptureModal\" size=\"small\">\n                                {{ $tc('global.default.cancel') }}\n                            </sw-button>\n\n                            <sw-button @click=\"capture\" variant=\"primary\" size=\"small\" :isLoading=\"isLoadingCapture\">\n                                {{ $tc(\"altaPay.capture\") }}\n                            </sw-button>\n                        </template>\n                    </sw-modal>\n                </div>\n            </sw-container>\n    </sw-card-section>\n</sw-card>\n","import template from './sw-order-detail-altapay.html.twig';\n\nconst { mapGetters, mapState } = Shopware.Component.getComponentHelper();\nconst { State } = Shopware;\n\nShopware.Component.register('sw-order-detail-altapay', {\n    template,\n\n    inject: ['altaPayService'],\n\n    computed: {\n        ...mapState('swOrderDetail', [\n            'order'\n        ]),\n        orderDetails() {\n            try {\n                const version = Shopware?.Context?.app?.config?.version ?? '';\n                if (!version.startsWith('6.6')) {\n                    return Shopware.Store.get('swOrderDetail').order;\n                }\n            } catch (e) {\n                console.log('swOrderDetail store not found:', e);\n            }\n        },\n        orderId() {\n            return this.orderDetails?.id || this.order?.id || null;\n        },\n        transactionSource() {\n            return this.orderDetails || this.order || null;\n        }\n    },\n\n    metaInfo() {\n        return {\n            title: 'AltaPay'\n        }\n    },\n\n    data() {\n        return {\n            transaction: null,\n            captureAmount: 0,\n            isLoadingCapture: false,\n            showCaptureModal: false,\n            errorMessage: '',\n            successMessage: ''\n        }\n    },\n\n    methods: {\n        createdComponent() {\n            State.commit('swOrderDetail/setLoading', ['order', true]);\n            this.altaPayService.getPayments(this.orderId).then(response => {\n                this.transaction = response.Body.Transactions.Transaction;\n            }).finally(() => {\n                State.commit('swOrderDetail/setLoading', ['order', false]);\n            });\n        },\n        capture() {\n            State.commit('swOrderDetail/setLoading', ['order', true]);\n            this.altaPayService.capture(this.orderId, this.captureAmount).then(response => {\n                if (response.Body.Result === 'Error') {\n                    this.errorMessage = response.Body.MerchantErrorMessage;\n                    return;\n                } else {\n                    this.successMessage = 'Captured successfully.';\n                }\n                this.transaction = response.Body.Transactions.Transaction;\n                this.$emit('save-edits');\n            }).finally(() => {\n                setTimeout(() => {\n                    this.closeCaptureModal();\n                    State.commit('swOrderDetail/setLoading', ['order', false]);\n                }, 1000);\n            });\n        },\n        refund() {\n            State.commit('swOrderDetail/setLoading', ['order', true]);\n            this.altaPayService.refund(this.orderId).then(response => {\n                this.transaction = response.Body.Transactions.Transaction;\n                this.$emit('save-edits');\n            }).finally(() => {\n                State.commit('swOrderDetail/setLoading', ['order', false]);\n            });\n        },\n        cancel() {\n            State.commit('swOrderDetail/setLoading', ['order', true]);\n            this.altaPayService.cancel(this.orderId).then(response => {\n                this.transaction = response.Body.Transactions.Transaction;\n                this.$emit('save-edits');\n            }).finally(() => {\n                State.commit('swOrderDetail/setLoading', ['order', false]);\n            });\n        },\n        openCaptureModal() {\n            this.captureAmount = this.transaction.ReservedAmount - this.transaction.CapturedAmount;\n            this.showCaptureModal = true;\n        },\n\n        closeCaptureModal() {\n            this.showCaptureModal = false;\n            this.errorMessage = '';\n            this.successMessage = '';\n        }\n    },\n\n    created() {\n        this.createdComponent();\n    }\n})\n","const ApiService = Shopware.Classes.ApiService;\nconst { Application } = Shopware;\n\nclass AltaPayService extends ApiService {\n    getPayments(orderId) {\n        return this.httpClient.get(\n            `/${this.getApiBasePath()}/payments?orderId=${orderId}`,\n            {\n                headers: this.getBasicHeaders()\n            }\n        ).then(response => ApiService.handleResponse(response));\n    };\n\n    capture(orderId, captureAmount) {\n        return this.httpClient.post(\n            `/${this.getApiBasePath()}/capture`,\n            {\n                orderId,\n                captureAmount\n            },\n            {\n                headers: this.getBasicHeaders()\n            }\n        ).then(response => ApiService.handleResponse(response));\n    };\n\n    refund(orderId) {\n        return this.httpClient.post(\n            `/${this.getApiBasePath()}/refund`,\n            {\n                orderId\n            },\n            {\n                headers: this.getBasicHeaders()\n            }\n        ).then(response => ApiService.handleResponse(response));\n    };\n\n    cancel(orderId) {\n        return this.httpClient.post(\n            `/${this.getApiBasePath()}/cancel`,\n            {\n                orderId\n            },\n            {\n                headers: this.getBasicHeaders()\n            }\n        ).then(response => ApiService.handleResponse(response));\n    };\n}\n\nApplication.addServiceProvider('altaPayService', (container) => {\n    const initContainer = Application.getContainer('init');\n    return new AltaPayService(initContainer.httpClient, container.loginService, 'altapay');\n});\n","import \"./page/sw-order-detail\";\nimport \"./view/sw-order-detail-altapay\";\nimport \"./services/altaPay.service\";\n\nShopware.Module.register('wexo-altapay', {\n    routeMiddleware(next, currentRoute) {\n        const customRouteName = 'sw.order.detail.altaPay';\n\n        if (\n            currentRoute.name === 'sw.order.detail'\n            && currentRoute.children.every((currentRoute) => currentRoute.name !== customRouteName)\n        ) {\n            currentRoute.children.push({\n                name: customRouteName,\n                path: '/sw/order/detail/:id/altapay',\n                component: 'sw-order-detail-altapay',\n                meta: {\n                    parentPath: 'sw.order.index'\n                }\n            });\n        }\n        next(currentRoute);\n    }\n})\n\nShopware.Locale.extend('da-DK', {\n    'altaPay': {\n        'tabDetails': 'AltaPay',\n        'capture': 'Hæv',\n        'refund': 'Refunder',\n        'cancel': 'Annuller'\n    }\n})\nShopware.Locale.extend('en-GB', {\n    'altaPay': {\n        'tabDetails': 'AltaPay',\n        'capture': 'Capture',\n        'refund': 'Refund',\n        'cancel': 'Cancel'\n    }\n})\nShopware.Locale.extend('de-DE', {\n    'altaPay': {\n        'tabDetails': 'AltaPay',\n        'capture': 'Einfangen',\n        'refund': 'Rückerstattung',\n        'cancel': 'Annullieren'\n    }\n})\n"],"names":["template$1","template","_a","_b","mapGetters","mapState","State","_c","e","response","ApiService","Application","AltaPayService","orderId","captureAmount","container","initContainer","next","currentRoute","customRouteName"],"mappings":"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"}