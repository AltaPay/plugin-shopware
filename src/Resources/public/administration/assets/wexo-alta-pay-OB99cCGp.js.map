{"version":3,"file":"wexo-alta-pay-OB99cCGp.js","sources":["../../../app/administration/src/page/sw-order-detail/sw-order-detail.html.twig","../../../app/administration/src/page/sw-order-detail/index.js","../../../app/administration/src/view/sw-order-detail-altapay/sw-order-detail-altapay.html.twig","../../../app/administration/src/view/sw-order-detail-altapay/index.js","../../../app/administration/src/services/altaPay.service.js","../../../app/administration/src/main.js"],"sourcesContent":["{% block sw_order_detail_content_tabs_extension %}\n    <sw-tabs-item\n            v-if=\"!isOrderEditing && altaPayTransactionId\"\n            class=\"sw-order-detail__tabs-tab-altaPay\"\n            :route=\"{ name: 'sw.order.detail.altaPay', params: { id: $route.params.id } }\"\n            :title=\"$tc('altaPay.tabDetails')\"\n    >\n            {{ $tc('altaPay.tabDetails') }}\n    </sw-tabs-item>\n{% endblock %}\n","import template from './sw-order-detail.html.twig';\n\nShopware.Component.override('sw-order-detail', {\n    template,\n\n    computed: {\n        altaPayTransactionId() {\n            return this.order?.customFields?.wexoAltaPayTransactionId;\n        }\n    }\n})\n","<sw-card title=\"AltaPay Status\" :isLoading=\"isLoading\" positionIdentifier=\"altapay\">\n    <sw-card-section v-if=\"transaction\">\n        <sw-container columns=\"1fr 1fr\" gap=\"10px\">\n            <div>Transaction ID:</div>\n            <div>{{ transaction.TransactionId }}</div>\n            <div>Payment ID:</div>\n            <div>{{ transaction.PaymentId }}</div>\n            <div>Transaction Status:</div>\n            <div>{{ transaction.TransactionStatus }}</div>\n            <div>Reserved Amount:</div>\n            <div>{{ transaction.ReservedAmount }} {{ transaction.MerchantCurrencyAlpha }}</div>\n            <div>Captured Amount:</div>\n            <div>{{ transaction.CapturedAmount }} {{ transaction.MerchantCurrencyAlpha }}</div>\n            <div>Refunded Amount:</div>\n            <div>{{ transaction.RefundedAmount }} {{ transaction.MerchantCurrencyAlpha }}</div>\n            <div>3D Secure:</div>\n            <div>{{ transaction.ThreeDSecureResult }}</div>\n            <div>Created:</div>\n            <div>{{ transaction.CreatedDate }}</div>\n            <div>Last updated:</div>\n            <div>{{ transaction.UpdatedDate }}</div>\n        </sw-container>\n    </sw-card-section>\n    <sw-card-section v-if=\"transaction\">\n            <sw-container columns=\"1fr 1fr 1fr\" gap=\"10px\" align=\"center\">\n                <div style=\"display: flex;justify-content: center;gap: 25px;\">\n                    <sw-button :disabled=\"isLoading || !['open', 'in_progress', 'authorized'].includes(order.transactions[0].stateMachineState.technicalName)\" @click=\"capture\">{{ $tc(\"altaPay.capture\") }}</sw-button>\n                    <sw-button :disabled=\"isLoading || order.transactions[0].stateMachineState.technicalName !== 'paid'\" @click=\"refund\">{{ $tc(\"altaPay.refund\") }}</sw-button>\n                    <sw-button :disabled=\"isLoading || !['open', 'in_progress', 'authorized'].includes(order.transactions[0].stateMachineState.technicalName)\" @click=\"cancel\">{{ $tc(\"altaPay.cancel\") }}</sw-button>\n                </div>\n            </sw-container>\n    </sw-card-section>\n</sw-card>\n","import template from './sw-order-detail-altapay.html.twig';\n\nconst { mapVuexGetters, mapVuexState } = Shopware.Component.getComponentHelper();\nconst { State } = Shopware;\n\nShopware.Component.register('sw-order-detail-altapay', {\n    template,\n\n    inject: ['altaPayService'],\n\n    computed: {\n        ...mapVuexGetters('swOrderDetail', [\n            'isLoading',\n        ]),\n        order() {\n            return Shopware.Store.get('swOrderDetail').order;\n        }\n    },\n\n    metaInfo() {\n        return {\n            title: 'AltaPay'\n        }\n    },\n\n    data() {\n        return {\n            transaction: null\n        }\n    },\n\n    methods: {\n        createdComponent() {\n            State.commit('swOrderDetail/setLoading', ['order', true]);\n            this.altaPayService.getPayments(this.order.id).then(response => {\n                this.transaction = response.Body.Transactions.Transaction;\n            }).finally(() => {\n                State.commit('swOrderDetail/setLoading', ['order', false]);\n            });\n        },\n        capture() {\n            State.commit('swOrderDetail/setLoading', ['order', true]);\n            this.altaPayService.capture(this.order.id).then(response => {\n                this.transaction = response.Body.Transactions.Transaction;\n                this.$emit('save-edits');\n            }).finally(() => {\n                State.commit('swOrderDetail/setLoading', ['order', false]);\n            });\n        },\n        refund() {\n            State.commit('swOrderDetail/setLoading', ['order', true]);\n            this.altaPayService.refund(this.order.id).then(response => {\n                this.transaction = response.Body.Transactions.Transaction;\n                this.$emit('save-edits');\n            }).finally(() => {\n                State.commit('swOrderDetail/setLoading', ['order', false]);\n            });\n        },\n        cancel() {\n            State.commit('swOrderDetail/setLoading', ['order', true]);\n            this.altaPayService.cancel(this.order.id).then(response => {\n                this.transaction = response.Body.Transactions.Transaction;\n                this.$emit('save-edits');\n            }).finally(() => {\n                State.commit('swOrderDetail/setLoading', ['order', false]);\n            });\n        }\n    },\n\n    created() {\n        this.createdComponent();\n    }\n})\n","const ApiService = Shopware.Classes.ApiService;\nconst { Application } = Shopware;\n\nclass AltaPayService extends ApiService {\n    getPayments(orderId) {\n        return this.httpClient.get(\n            `/${this.getApiBasePath()}/payments?orderId=${orderId}`,\n            {\n                headers: this.getBasicHeaders()\n            }\n        ).then(response => ApiService.handleResponse(response));\n    };\n\n    capture(orderId) {\n        return this.httpClient.post(\n            `/${this.getApiBasePath()}/capture`,\n            {\n                orderId\n            },\n            {\n                headers: this.getBasicHeaders()\n            }\n        ).then(response => ApiService.handleResponse(response));\n    };\n\n    refund(orderId) {\n        return this.httpClient.post(\n            `/${this.getApiBasePath()}/refund`,\n            {\n                orderId\n            },\n            {\n                headers: this.getBasicHeaders()\n            }\n        ).then(response => ApiService.handleResponse(response));\n    };\n\n    cancel(orderId) {\n        return this.httpClient.post(\n            `/${this.getApiBasePath()}/cancel`,\n            {\n                orderId\n            },\n            {\n                headers: this.getBasicHeaders()\n            }\n        ).then(response => ApiService.handleResponse(response));\n    };\n}\n\nApplication.addServiceProvider('altaPayService', (container) => {\n    const initContainer = Application.getContainer('init');\n    return new AltaPayService(initContainer.httpClient, container.loginService, 'altapay');\n});\n","import \"./page/sw-order-detail\";\nimport \"./view/sw-order-detail-altapay\";\nimport \"./services/altaPay.service\";\n\nShopware.Module.register('wexo-altapay', {\n    routeMiddleware(next, currentRoute) {\n        const customRouteName = 'sw.order.detail.altaPay';\n\n        if (\n            currentRoute.name === 'sw.order.detail'\n            && currentRoute.children.every((currentRoute) => currentRoute.name !== customRouteName)\n        ) {\n            currentRoute.children.push({\n                name: customRouteName,\n                path: '/sw/order/detail/:id/altapay',\n                component: 'sw-order-detail-altapay',\n                meta: {\n                    parentPath: 'sw.order.index'\n                }\n            });\n        }\n        next(currentRoute);\n    }\n})\n\nShopware.Locale.extend('da-DK', {\n    'altaPay': {\n        'tabDetails': 'AltaPay',\n        'capture': 'Hæv',\n        'refund': 'Refunder',\n        'cancel': 'Annuller'\n    }\n})\nShopware.Locale.extend('en-GB', {\n    'altaPay': {\n        'tabDetails': 'AltaPay',\n        'capture': 'Capture',\n        'refund': 'Refund',\n        'cancel': 'Cancel'\n    }\n})\nShopware.Locale.extend('de-DE', {\n    'altaPay': {\n        'tabDetails': 'AltaPay',\n        'capture': 'Einfangen',\n        'refund': 'Rückerstattung',\n        'cancel': 'Annullieren'\n    }\n})\n"],"names":["template$1","template","_a","_b","mapVuexGetters","mapVuexState","State","response","ApiService","Application","AltaPayService","orderId","container","initContainer","next","currentRoute","customRouteName"],"mappings":"AAAA,MAAeA,EAAA,+UCEf,SAAS,UAAU,SAAS,kBAAmB,CAC/C,SAAIC,EAEA,SAAU,CACN,sBAAuB,CDN/B,IAAAC,EAAAC,ECOY,OAAOA,GAAAD,EAAA,KAAK,QAAL,YAAAA,EAAY,eAAZ,YAAAC,EAA0B,wBAC7C,CACA,CACA,CAAC,ECVD,MAAeF,EAAA,+qDCET,CAAE,eAAAG,EAAgB,aAAAC,CAAY,EAAK,SAAS,UAAU,mBAAoB,EAC1E,CAAE,MAAAC,CAAO,EAAG,SAElB,SAAS,UAAU,SAAS,0BAA2B,CACnD,SAAAL,EAEA,OAAQ,CAAC,gBAAgB,EAEzB,SAAU,CACN,GAAGG,EAAe,gBAAiB,CAC/B,WACZ,CAAS,EACD,OAAQ,CACJ,OAAO,SAAS,MAAM,IAAI,eAAe,EAAE,KACvD,CACK,EAED,UAAW,CACP,MAAO,CACH,MAAO,SACnB,CACK,EAED,MAAO,CACH,MAAO,CACH,YAAa,IACzB,CACK,EAED,QAAS,CACL,kBAAmB,CACfE,EAAM,OAAO,2BAA4B,CAAC,QAAS,EAAI,CAAC,EACxD,KAAK,eAAe,YAAY,KAAK,MAAM,EAAE,EAAE,KAAKC,GAAY,CAC5D,KAAK,YAAcA,EAAS,KAAK,aAAa,WAC9D,CAAa,EAAE,QAAQ,IAAM,CACbD,EAAM,OAAO,2BAA4B,CAAC,QAAS,EAAK,CAAC,CACzE,CAAa,CACJ,EACD,SAAU,CACNA,EAAM,OAAO,2BAA4B,CAAC,QAAS,EAAI,CAAC,EACxD,KAAK,eAAe,QAAQ,KAAK,MAAM,EAAE,EAAE,KAAKC,GAAY,CACxD,KAAK,YAAcA,EAAS,KAAK,aAAa,YAC9C,KAAK,MAAM,YAAY,CACvC,CAAa,EAAE,QAAQ,IAAM,CACbD,EAAM,OAAO,2BAA4B,CAAC,QAAS,EAAK,CAAC,CACzE,CAAa,CACJ,EACD,QAAS,CACLA,EAAM,OAAO,2BAA4B,CAAC,QAAS,EAAI,CAAC,EACxD,KAAK,eAAe,OAAO,KAAK,MAAM,EAAE,EAAE,KAAKC,GAAY,CACvD,KAAK,YAAcA,EAAS,KAAK,aAAa,YAC9C,KAAK,MAAM,YAAY,CACvC,CAAa,EAAE,QAAQ,IAAM,CACbD,EAAM,OAAO,2BAA4B,CAAC,QAAS,EAAK,CAAC,CACzE,CAAa,CACJ,EACD,QAAS,CACLA,EAAM,OAAO,2BAA4B,CAAC,QAAS,EAAI,CAAC,EACxD,KAAK,eAAe,OAAO,KAAK,MAAM,EAAE,EAAE,KAAKC,GAAY,CACvD,KAAK,YAAcA,EAAS,KAAK,aAAa,YAC9C,KAAK,MAAM,YAAY,CACvC,CAAa,EAAE,QAAQ,IAAM,CACbD,EAAM,OAAO,2BAA4B,CAAC,QAAS,EAAK,CAAC,CACzE,CAAa,CACb,CACK,EAED,SAAU,CACN,KAAK,iBAAkB,CAC/B,CACA,CAAC,ECxED,MAAME,EAAa,SAAS,QAAQ,WAC9B,CAAE,YAAAC,CAAa,EAAG,SAExB,MAAMC,UAAuBF,CAAW,CACpC,YAAYG,EAAS,CACjB,OAAO,KAAK,WAAW,IACnB,IAAI,KAAK,eAAgB,CAAA,qBAAqBA,CAAO,GACrD,CACI,QAAS,KAAK,gBAAe,CAC7C,CACS,EAAC,KAAKJ,GAAYC,EAAW,eAAeD,CAAQ,CAAC,CACzD,CAED,QAAQI,EAAS,CACb,OAAO,KAAK,WAAW,KACnB,IAAI,KAAK,eAAc,CAAE,WACzB,CACI,QAAAA,CACH,EACD,CACI,QAAS,KAAK,gBAAe,CAC7C,CACS,EAAC,KAAKJ,GAAYC,EAAW,eAAeD,CAAQ,CAAC,CACzD,CAED,OAAOI,EAAS,CACZ,OAAO,KAAK,WAAW,KACnB,IAAI,KAAK,eAAc,CAAE,UACzB,CACI,QAAAA,CACH,EACD,CACI,QAAS,KAAK,gBAAe,CAC7C,CACS,EAAC,KAAKJ,GAAYC,EAAW,eAAeD,CAAQ,CAAC,CACzD,CAED,OAAOI,EAAS,CACZ,OAAO,KAAK,WAAW,KACnB,IAAI,KAAK,eAAc,CAAE,UACzB,CACI,QAAAA,CACH,EACD,CACI,QAAS,KAAK,gBAAe,CAC7C,CACS,EAAC,KAAKJ,GAAYC,EAAW,eAAeD,CAAQ,CAAC,CACzD,CACL,CAEAE,EAAY,mBAAmB,iBAAmBG,GAAc,CAC5D,MAAMC,EAAgBJ,EAAY,aAAa,MAAM,EACrD,OAAO,IAAIC,EAAeG,EAAc,WAAYD,EAAU,aAAc,SAAS,CACzF,CAAC,ECjDD,SAAS,OAAO,SAAS,eAAgB,CACrC,gBAAgBE,EAAMC,EAAc,CAChC,MAAMC,EAAkB,0BAGpBD,EAAa,OAAS,mBACnBA,EAAa,SAAS,MAAOA,GAAiBA,EAAa,OAASC,CAAe,GAEtFD,EAAa,SAAS,KAAK,CACvB,KAAMC,EACN,KAAM,+BACN,UAAW,0BACX,KAAM,CACF,WAAY,gBAChC,CACA,CAAa,EAELF,EAAKC,CAAY,CACzB,CACA,CAAC,EAED,SAAS,OAAO,OAAO,QAAS,CAC5B,QAAW,CACP,WAAc,UACd,QAAW,MACX,OAAU,WACV,OAAU,UAClB,CACA,CAAC,EACD,SAAS,OAAO,OAAO,QAAS,CAC5B,QAAW,CACP,WAAc,UACd,QAAW,UACX,OAAU,SACV,OAAU,QAClB,CACA,CAAC,EACD,SAAS,OAAO,OAAO,QAAS,CAC5B,QAAW,CACP,WAAc,UACd,QAAW,YACX,OAAU,iBACV,OAAU,aAClB,CACA,CAAC"}